Surface Flow Evaluators
-----------------------

Evaluators are used in surface flow for things like ponded depth,
Manning's conductivity, and their frozen equivalents.

Ponded Depth
^^^^^^^^^^^^
`src/physics/ats/src/pks/flow/constitutive_relations/elevation/height_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/elevation/height_evaluator.hh>`_


Computes ponded depth from surface water pressure.

.. math::
   h = \frac{H(p - p_{atm})}{\rho g}

where :math:`H` is the Heaviside function.

`"evaluator type`" = `"ponded depth`"

.. _evaluator-ponded-depth-spec:
.. admonition:: evaluator-ponded-depth-spec

   KEYS:

   - `"pressure`"
   - `"mass density`"
   - `"atmospheric pressure`"
   - `"gravity`"



Ponded Depth, Frozen
^^^^^^^^^^^^^^^^^^^^
`src/physics/ats/src/pks/flow/constitutive_relations/elevation/icy_height_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/elevation/icy_height_evaluator.hh>`_


Computes ponded depth from surface water pressure and an unfrozen fraction.

.. math::

   h = \frac{p - p_{atm}}{[\eta \rho_l + (1 - \eta) \rho_i] g}

`"evaluator type`" = `"icy ponded depth`"

.. _evaluator-icy-ponded-depth-spec:
.. admonition:: evaluator-icy-ponded-depth-spec

   KEYS:

   - `"pressure`"
   - `"unfrozen fraction`"
   - `"mass density liquid`"
   - `"mass density ice`"
   - `"atmospheric pressure`"
   - `"gravity`"




Smoothed Ponded Depth
^^^^^^^^^^^^^^^^^^^^^
`src/physics/ats/src/pks/flow/constitutive_relations/elevation/effective_height_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/elevation/effective_height_evaluator.hh>`_


Computes ponded depth from surface water pressure using a smoothed term to make
derivative smooth near 0.  This is pretty much never used anymore.

`"evaluator type`" = `"effective height`"

.. _evaluator-effective-height-spec:
.. admonition:: evaluator-effective-height-spec

   * `"smoothing width [m]`" ``[double]`` **0.01** the length scale over which
     smoothing is applied.

   KEYS:

   - `"height`" The unsmoothed ponded depth




Unfrozen Fraction
^^^^^^^^^^^^^^^^^
`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/unfrozen_fraction_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/unfrozen_fraction_evaluator.hh>`_


An empirical equation for freezing ponded water -- this is simply a smooth
sinusoidal curve from 0 to 1 over a given transition in temperature.

`"evaluator type`" = `"unfrozen fraction`"

.. _evaluator-unfrozen-fraction-spec:
.. admonition:: evaluator-unfrozen-fraction-spec

   * `"unfrozen fraction model`" ``[unfrozen-fraction-model-spec]``

   KEYS:

   - `"temperature`"


`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/unfrozen_fraction_model.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/unfrozen_fraction_model.hh>`_


.. _unfrozen-fraction-model-spec:
.. admonition:: unfrozen-fraction-model-spec

   * `"transition width [K]`" ``[double]`` **0.2** Degrees over which to
     transition from no ice to all ice.

   * `"freezing point [K]`" ``[double]`` **273.15** Center of the transition,
     at this point unfrozen fraction is 0.5.

   * `"minimum unfrozen fraction [-]`" ``[double]`` **0** Sets a minimum value.




Unfrozen Flowing Depth
^^^^^^^^^^^^^^^^^^^^^^
`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/unfrozen_effective_depth_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/unfrozen_effective_depth_evaluator.hh>`_


In freezing conditions, water is only mobile if it is unfrozen.  This evaluator
determines how much water is allowed to flow given that it is partially frozen.
It is an empirical model.

.. math::

   \delta_{mobile} = h \eta^{\alpha}

Given a ponded depth, an unfrozen fraction, and an optional power-law exponent,
which we call the ice retardation exponent.

.. _evaluator-unfrozen-effective-depth-spec:
.. admonition:: evaluator-unfrozen-effective-depth-spec

   * `"ice retardation exponent [-]`" ``[double]`` **1.0** exponent alpha
     controlling how quickly ice turns off flow.

   DEPENDENCIES:

   - `"depth`"
   - `"unfrozen fraction`"




Overland Conductivity, Sheet Flow
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. _`Overland Conductivity Evaluator`:
`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/overland_conductivity_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/overland_conductivity_evaluator.hh>`_


This implements the conductivity term in overland flow, which is the nonlinear
coefficient in the diffusion wave equation.  The term is given by:

.. math::

   k = \delta \frac{\delta^{\alpha}}{n_{mann} \sqrt(| \nabla z |)}

Optionally, this may include a density factor, typically a molar density, which
converts the flow law to water flux rather than volumetric flux.

Also, this evaluator can be used in snow redistribution, and in that case needs
some extra factors (timestep size) to ensure the correct flow law in that case.

`"evaluator type`" = `"overland conductivity`"

.. _evaluator-overland-conductivity-spec:
.. admonition:: evaluator-overland-conductivity-spec

   * `"include density`" ``[bool]`` **true** Include the density prefactor,
     converting the flux from volumetric flux to water flux.
   * `"dt factor [s]`" ``[double]`` **-1** The artificial timestep size used in calculating
     snow redistribution, only used in that case.
   * `"swe density factor [-]`" ``[double]`` **10** Ratio of water to snow
     density.  Also only used in the snow distribution case.
   * `"overland conductivity model`" ``[overland-conductivity-manning-spec]``

   DEPENDENCIES:

   - `"mobile depth`" **DOMAIN-mobile_depth** Depth of the mobile water; :math:`\delta`
     in the above equation.
   - `"slope`" **DOMAIN-slope_magnitude** Magnitude of the bed surface driving
     flow; :math:`| \nabla z |` above.
   - `"coefficient`" **DOMAIN-manning_coefficient** Surface roughness/shape
     coefficient; :math:`n_{mann}` above.
   - `"molar density liquid`" **DOMAIN-molar_density_liquid** If `"include
     density`" is true, the density.



`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/manning_conductivity_model.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/manning_conductivity_model.hh>`_


.. _overland-conductivity-manning-spec:
.. admonition:: overland-conductivity-manning-spec

   * `"Manning exponent`" ``[double]`` **2/3**
   * `"slope regularization epsilon`" ``[double]`` **1.e-8** In ATS's
     implementation of the diffusion wave equation, it is expected that |S| >
     0.  This may be arbitrarily small, but it keeps slope from being exactly
     0, which crashes the code.
   * `"maximum ponded depth [m]`" ``[double]`` **1.e8** Arbitrarily large
     ponded depth creates arbitrarily large flowing velocities -- sometimes we
     wish to use this model (even though it is incorrect) for larger rivers.
     This limits the velocity from being unbounded.

 


Manning Coefficient
^^^^^^^^^^^^^^^^^^^

The Manning coefficient is most commonly just a piecewise-constant
function (defined by land cover type or stream order).  In the most
common case, it is therefore an :ref:`Independent Variable From
Function`.  However, there are cases where it is useful to define it
as a function of a dynamic litter layer:

`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/manning_coefficient_litter_evaluator.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/manning_coefficient_litter_evaluator.hh>`_


Manning's coefficient that varies based on litter thickness and ponded depth.

`"evaluator type`" = `"Manning coefficient, litter`"

.. evaluator-manning-coefficient-litter-spec:
.. admonition:: evaluator-manning-coefficient-litter-spec

   * `"Manning coefficient parameters`" ``[manning-coefficient-typedinline-spec-list]``

   DEPENDENCIES:

   - `"litter thickness`"
   - `"ponded depth`"




**Manning n Models**

`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/manning_coefficient_litter_constant_model.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/manning_coefficient_litter_constant_model.hh>`_


A constant Manning's n

`"Manning coefficient model type`" = `"constant`"

.. manning-coefficient-constant-spec:
.. admonition:: manning-coefficient-constant-spec

   * `"Manning coefficient [s m^-1/3]`" ``[double]``



`src/physics/ats/src/pks/flow/constitutive_relations/overland_conductivity/manning_coefficient_litter_variable_model.hh <https://github.com/amanzi/ats/blob/master/src/pks/flow/constitutive_relations/overland_conductivity/manning_coefficient_litter_variable_model.hh>`_


A Manning coefficient with variable litter thickness.  Manning's n is taken to
vary with litter depth.  If ponded depth is less than the litter depth, then n
is given by litter n.  If ponded depth is greater than litter depth, it is
approaches bare ground n for ponded depth >> litter depth.

`"Manning coefficient model type`" = `"variable`"

.. manning-coefficient-variable-spec:
.. admonition:: manning-coefficient-variable-spec

   * `"Manning coefficient bare ground [s m^-1/3]`" ``[double]`` **0.02**
   * `"Manning coefficient litter [s m^-1/3]`" ``[double]`` **0.1**





