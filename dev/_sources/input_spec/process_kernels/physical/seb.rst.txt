Surface Energy Balance PKs
------------------------------

Integrated hydrology is not much use without significant process
complexity in source terms coming from the ecohydrologic environment.
These include straightforward sources, like precipitation, but also
more complicated ones such as evaporation and transpiration.

These terms are almost always tied up in a surface energy balance --
evaporation and transpiration are driven by vapor pressure gradients
between the atmosphere and the surface (either snow, ponded water,
soil, or leaf).  Solving a surface energy balance often requires
providing a bunch of terms, including radiated energy, conducted
energy, latent and sensible heat models, etc.

ATS currently has several approaches to calculating these -- see
`ats-demos <https://github.com/amanzi/ats-demos>`_ examples on
ecohydrology for a more in-depth discussion.

Balance Equation
^^^^^^^^^^^^^^^^
`src/physics/ats/src/pks/surface_balance/surface_balance_base.hh <https://github.com/amanzi/ats/blob/master/src/pks/surface_balance/surface_balance_base.hh>`_


A simple set of time-evolving ODEs, solving for conservation of some quantity.

This is a very simple vector of ODEs, useful in balance equations, where the
time derivative of a conserved quantity is determined by a bunch of sources and
sinks.

.. math::
    \frac{\partial \Phi }{\partial t} = \sum_i Q_i

`"PK type`" = `"general surface balance`"

.. _pk-general-surface-balance-spec:
.. admonition:: pk-general-surface-balance-spec

   * `"primary variable key`" ``[string]`` The primary variable associated with
     this PK.  Note there is no default -- this must be provided by the user.

   * `"conserved quantity key`" ``[string]`` The conserved quantity :math:`\Phi`

   * `"source key`" ``[string]`` **DOMAIN-source_sink** Units are in conserved
     quantity per second per cell volume.  This default is typically only
     appropriate when this is a water balance PK and the domain is sufficient
     to identify the balance.  E.g. the domain is "canopy" and this equation
     solves for a canopy water balance.  Otherwise this should also be renamed
     to avoid confusion.

   * `"time discretization theta`" ``[double]`` **1.0** :math:`\theta` in a
     Crank-Nicholson time integration scheme.  1.0 implies fully implicit, 0.0
     implies explicit, 0.5 implies C-N.

   Math and solver algorithm options:

   * `"absolute error tolerance`" ``[double]`` **550.0** a_tol in the standard
     error norm calculation.  Defaults to a small amount of water.  Units are
     the same as the conserved quantity.

   * `"inverse`" ``[inverse-spec]`` **optional** The inverse used for
     preconditioning in a non-globally coupled problem.  See :ref:`Inverse`.

   * `"accumulation preconditioner`" ``[pde-accumulation-spec]`` **optional**
     The inverse of the accumulation operator.  See :ref:`Accumulation`.
     Typically not provided by users, as defaults are sufficient.

   Globalization and other process-based hacks:

   * `"modify predictor positivity preserving`" ``[bool]`` **false** If true,
     predictors are modified to ensure that the conserved quantity is always > 0.

   INCLUDES:

   - ``[pk-physical-bdf-default-spec]`` A :ref:`PK: Physical and BDF` spec.





Snow Balance Equation
^^^^^^^^^^^^^^^^^^^^^
`src/physics/ats/src/pks/surface_balance/surface_balance_implicit_subgrid.hh <https://github.com/amanzi/ats/blob/master/src/pks/surface_balance/surface_balance_implicit_subgrid.hh>`_


This is a balance PK whose conserved quantity is snow water equivalent.  The
energy balance comes in as it provides the energy needed to melt snow.  So
source terms include snow precipitation and snowmelt.  It also manages snow
density, which should get rethought a bit.

There is also some wierd hackiness here about area fractions -- see ATS Issue
#8.

`"PK type`" = `"surface balance implicit subgrid`"

.. _pk-surface-balance-implicit-subgrid-spec:
.. admonition:: pk-surface-balance-implicit-subgrid-spec

   * `"absolute error tolerance`" ``[double]`` **0.01** ``[m]`` A small amount
     of snow.

   INCLUDES:

   - ``[balance-pk-spec]`` This *is a* `Balance Equation`_

   KEYS:

   - `"conserved quantity key`" **DOMAIN-snow_water_equivalent** Sets the
     default conserved quantity key, so this is likely not supplied by the
     user. `[m]`
   - `"snow density key`" **DOMAIN-density** Default snow density key. `[kg
     m^-3]`
   - `"snow age key`" **DOMAIN-age** Default snow age key. `[d]`
   - `"new snow key`" **DOMAIN-source** Default new snow key. `[m SWE s^-1]`
   - `"area fractions key`" **DOMAIN-fractional_areas** Subgrid model
     fractional areas, see note above. `[-]`
   - `"snow death rate key`" **DOMAIN-death_rate** Deals with last tiny bit of
     snowmelt.






