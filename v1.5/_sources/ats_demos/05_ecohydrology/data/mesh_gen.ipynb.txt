{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys,os\n",
    "import workflow.mesh\n",
    "\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2D transect and 2D mesh\n",
    "x = np.arange(0,1000.01,10.)\n",
    "z = 50.-0.05*x\n",
    "m2 = workflow.mesh.Mesh2D.from_Transect(x,z)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# build up the layering structure as we extrude in the vertical\n",
    "layer_dzs = [0.03, 0.03, 0.06, 0.12, 0.24, 0.48, 0.5, 0.54] + [2,]*10\n",
    "layer_types = [\"constant\",]*len(layer_dzs)\n",
    "layer_ncells = [1,]*len(layer_dzs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening exodus file: hillslope2.exo\n",
      "Closing exodus file: hillslope2.exo\n"
     ]
    }
   ],
   "source": [
    "# undisturbed mesh\n",
    "layer_material_ids = [1001,]*(len(layer_dzs))\n",
    "m3 = workflow.mesh.Mesh3D.extruded_Mesh2D(m2, layer_types, layer_dzs, \n",
    "                                        layer_ncells, layer_material_ids)\n",
    "m3.write_exodus(\"hillslope2.exo\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "22.0\n"
     ]
    }
   ],
   "source": [
    "print(sum(layer_dzs))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opening exodus file: column2.exo\n",
      "Closing exodus file: column2.exo\n"
     ]
    }
   ],
   "source": [
    "# also do a column mesh variant\n",
    "xc = np.array([0.,1.])\n",
    "zc = np.array([0.,0.])\n",
    "m2c = workflow.mesh.Mesh2D.from_Transect(xc,zc)\n",
    "\n",
    "m3c = workflow.mesh.Mesh3D.extruded_Mesh2D(m2c, layer_types, layer_dzs, \n",
    "                                        layer_ncells, layer_material_ids)\n",
    "m3c.write_exodus(\"column2.exo\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda env:watershed_workflow_20210527] *",
   "language": "python",
   "name": "conda-env-watershed_workflow_20210527-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
